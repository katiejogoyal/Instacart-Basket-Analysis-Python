{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "33a08fb8",
   "metadata": {},
   "source": [
    "# 4.8 Grouping Data and Aggregating Variables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "3db1acb2",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import libraries\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import os"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "132c03e9",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define the path to the directory containing the pickle file\n",
    "path = '/Users/katiejogoyal/Desktop/Career Foundry_Module_4/data'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "aa06a6fc",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define the name of the pickle file\n",
    "file_name = 'orders_products_merged_derived.pkl'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "a84dc810",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create the full file path\n",
    "full_path = os.path.join(path,'orders_products_merged_derived.pkl') "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "e13f21ce",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Importing the pickle file\n",
    "ords_prods_merge = pd.read_pickle(full_path)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "5eef214e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>order_id</th>\n",
       "      <th>user_id</th>\n",
       "      <th>eval_set</th>\n",
       "      <th>order_number</th>\n",
       "      <th>orders_day_of_week</th>\n",
       "      <th>order_hour_of_day</th>\n",
       "      <th>days_since_prior_order</th>\n",
       "      <th>product_id</th>\n",
       "      <th>product_name</th>\n",
       "      <th>aisle_id</th>\n",
       "      <th>department_id</th>\n",
       "      <th>prices</th>\n",
       "      <th>department_name</th>\n",
       "      <th>price_range_loc</th>\n",
       "      <th>busiest_day</th>\n",
       "      <th>busiest_days</th>\n",
       "      <th>busiest_period_of_day</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2539329</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>Chocolate Sandwich Cookies</td>\n",
       "      <td>61</td>\n",
       "      <td>19</td>\n",
       "      <td>5.8</td>\n",
       "      <td>snacks</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Average orders</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1673511</td>\n",
       "      <td>2</td>\n",
       "      <td>prior</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>8.0</td>\n",
       "      <td>16</td>\n",
       "      <td>Mint Chocolate Flavored Syrup</td>\n",
       "      <td>103</td>\n",
       "      <td>19</td>\n",
       "      <td>5.2</td>\n",
       "      <td>snacks</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Slowest days</td>\n",
       "      <td>Most orders</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>839880</td>\n",
       "      <td>2</td>\n",
       "      <td>prior</td>\n",
       "      <td>14</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>13.0</td>\n",
       "      <td>25</td>\n",
       "      <td>Salted Caramel Lean Protein &amp; Fiber Bar</td>\n",
       "      <td>3</td>\n",
       "      <td>19</td>\n",
       "      <td>1.9</td>\n",
       "      <td>snacks</td>\n",
       "      <td>Low-range product</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Slowest days</td>\n",
       "      <td>Most orders</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1972919</td>\n",
       "      <td>3</td>\n",
       "      <td>prior</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>16</td>\n",
       "      <td>7.0</td>\n",
       "      <td>32</td>\n",
       "      <td>Nacho Cheese White Bean Chips</td>\n",
       "      <td>107</td>\n",
       "      <td>19</td>\n",
       "      <td>4.9</td>\n",
       "      <td>snacks</td>\n",
       "      <td>Low-range product</td>\n",
       "      <td>Busiest day</td>\n",
       "      <td>Busiest days</td>\n",
       "      <td>Most orders</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2030307</td>\n",
       "      <td>4</td>\n",
       "      <td>prior</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>11</td>\n",
       "      <td>19.0</td>\n",
       "      <td>41</td>\n",
       "      <td>Organic Sourdough Einkorn Crackers Rosemary</td>\n",
       "      <td>78</td>\n",
       "      <td>19</td>\n",
       "      <td>6.5</td>\n",
       "      <td>snacks</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Least busy</td>\n",
       "      <td>Slowest days</td>\n",
       "      <td>Most orders</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   order_id  user_id eval_set  order_number  orders_day_of_week  \\\n",
       "0   2539329        1    prior             1                   2   \n",
       "1   1673511        2    prior             5                   3   \n",
       "2    839880        2    prior            14                   3   \n",
       "3   1972919        3    prior             6                   0   \n",
       "4   2030307        4    prior             2                   4   \n",
       "\n",
       "   order_hour_of_day  days_since_prior_order  product_id  \\\n",
       "0                  8                     NaN           1   \n",
       "1                 11                     8.0          16   \n",
       "2                 10                    13.0          25   \n",
       "3                 16                     7.0          32   \n",
       "4                 11                    19.0          41   \n",
       "\n",
       "                                  product_name  aisle_id  department_id  \\\n",
       "0                   Chocolate Sandwich Cookies        61             19   \n",
       "1                Mint Chocolate Flavored Syrup       103             19   \n",
       "2      Salted Caramel Lean Protein & Fiber Bar         3             19   \n",
       "3                Nacho Cheese White Bean Chips       107             19   \n",
       "4  Organic Sourdough Einkorn Crackers Rosemary        78             19   \n",
       "\n",
       "   prices department_name    price_range_loc     busiest_day    busiest_days  \\\n",
       "0     5.8          snacks  Mid-range product  Regularly busy  Regularly busy   \n",
       "1     5.2          snacks  Mid-range product  Regularly busy    Slowest days   \n",
       "2     1.9          snacks  Low-range product  Regularly busy    Slowest days   \n",
       "3     4.9          snacks  Low-range product     Busiest day    Busiest days   \n",
       "4     6.5          snacks  Mid-range product      Least busy    Slowest days   \n",
       "\n",
       "  busiest_period_of_day  \n",
       "0        Average orders  \n",
       "1           Most orders  \n",
       "2           Most orders  \n",
       "3           Most orders  \n",
       "4           Most orders  "
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Display dataframe \n",
    "ords_prods_merge.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "0b07a823",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "department_id\n",
       "1     16.800599\n",
       "2     16.328467\n",
       "3     16.286939\n",
       "4     17.207245\n",
       "5     16.341856\n",
       "6     17.197542\n",
       "7     17.198855\n",
       "8     17.574074\n",
       "9     16.139397\n",
       "10    18.815789\n",
       "11    16.332369\n",
       "12    16.547960\n",
       "13    16.762055\n",
       "14    16.853047\n",
       "15    16.661090\n",
       "16    17.096840\n",
       "17    16.977958\n",
       "18    17.395005\n",
       "19    16.485632\n",
       "20    16.336611\n",
       "21    16.547695\n",
       "Name: order_number, dtype: float64"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#aggreated mean of the \"order_number\" column grouped by \"department_id\"\n",
    "ords_prods_merge.groupby('department_id')['order_number'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "0a1d1459",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define the loyalty categories based on the number of orders\n",
    "conditions = [\n",
    "    (ords_prods_merge['order_number'] < 10),\n",
    "    (ords_prods_merge['order_number'] >= 10) & (ords_prods_merge['order_number'] <= 20),\n",
    "    (ords_prods_merge['order_number'] > 20)\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "4a75a50f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define the corresponding values for each condition\n",
    "values = ['New Customer', 'Regular Customer', 'Loyal Customer']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "2bcc5379",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create a new column 'loyalty_flag' based on the conditions\n",
    "ords_prods_merge['loyalty_flag'] = np.select(conditions, values, default='Unknown')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "49ac9eb1",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Convert 'loyalty_flag' to a categorical type with specific order\n",
    "ords_prods_merge['loyalty_flag'] = pd.Categorical(ords_prods_merge['loyalty_flag'], categories=values, ordered=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "74317be8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "New Customer        23470\n",
      "Loyal Customer      13782\n",
      "Regular Customer    12441\n",
      "Name: loyalty_flag, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# Check loyalty flags\n",
    "print(ords_prods_merge['loyalty_flag'].value_counts(dropna=False))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "0237a277",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>order_id</th>\n",
       "      <th>user_id</th>\n",
       "      <th>eval_set</th>\n",
       "      <th>order_number</th>\n",
       "      <th>orders_day_of_week</th>\n",
       "      <th>order_hour_of_day</th>\n",
       "      <th>days_since_prior_order</th>\n",
       "      <th>product_id</th>\n",
       "      <th>product_name</th>\n",
       "      <th>aisle_id</th>\n",
       "      <th>department_id</th>\n",
       "      <th>prices</th>\n",
       "      <th>department_name</th>\n",
       "      <th>price_range_loc</th>\n",
       "      <th>busiest_day</th>\n",
       "      <th>busiest_days</th>\n",
       "      <th>busiest_period_of_day</th>\n",
       "      <th>loyalty_flag</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2539329</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>Chocolate Sandwich Cookies</td>\n",
       "      <td>61</td>\n",
       "      <td>19</td>\n",
       "      <td>5.8</td>\n",
       "      <td>snacks</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Average orders</td>\n",
       "      <td>New Customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1673511</td>\n",
       "      <td>2</td>\n",
       "      <td>prior</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>8.0</td>\n",
       "      <td>16</td>\n",
       "      <td>Mint Chocolate Flavored Syrup</td>\n",
       "      <td>103</td>\n",
       "      <td>19</td>\n",
       "      <td>5.2</td>\n",
       "      <td>snacks</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Slowest days</td>\n",
       "      <td>Most orders</td>\n",
       "      <td>New Customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>839880</td>\n",
       "      <td>2</td>\n",
       "      <td>prior</td>\n",
       "      <td>14</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>13.0</td>\n",
       "      <td>25</td>\n",
       "      <td>Salted Caramel Lean Protein &amp; Fiber Bar</td>\n",
       "      <td>3</td>\n",
       "      <td>19</td>\n",
       "      <td>1.9</td>\n",
       "      <td>snacks</td>\n",
       "      <td>Low-range product</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Slowest days</td>\n",
       "      <td>Most orders</td>\n",
       "      <td>Regular Customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1972919</td>\n",
       "      <td>3</td>\n",
       "      <td>prior</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>16</td>\n",
       "      <td>7.0</td>\n",
       "      <td>32</td>\n",
       "      <td>Nacho Cheese White Bean Chips</td>\n",
       "      <td>107</td>\n",
       "      <td>19</td>\n",
       "      <td>4.9</td>\n",
       "      <td>snacks</td>\n",
       "      <td>Low-range product</td>\n",
       "      <td>Busiest day</td>\n",
       "      <td>Busiest days</td>\n",
       "      <td>Most orders</td>\n",
       "      <td>New Customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2030307</td>\n",
       "      <td>4</td>\n",
       "      <td>prior</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>11</td>\n",
       "      <td>19.0</td>\n",
       "      <td>41</td>\n",
       "      <td>Organic Sourdough Einkorn Crackers Rosemary</td>\n",
       "      <td>78</td>\n",
       "      <td>19</td>\n",
       "      <td>6.5</td>\n",
       "      <td>snacks</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Least busy</td>\n",
       "      <td>Slowest days</td>\n",
       "      <td>Most orders</td>\n",
       "      <td>New Customer</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   order_id  user_id eval_set  order_number  orders_day_of_week  \\\n",
       "0   2539329        1    prior             1                   2   \n",
       "1   1673511        2    prior             5                   3   \n",
       "2    839880        2    prior            14                   3   \n",
       "3   1972919        3    prior             6                   0   \n",
       "4   2030307        4    prior             2                   4   \n",
       "\n",
       "   order_hour_of_day  days_since_prior_order  product_id  \\\n",
       "0                  8                     NaN           1   \n",
       "1                 11                     8.0          16   \n",
       "2                 10                    13.0          25   \n",
       "3                 16                     7.0          32   \n",
       "4                 11                    19.0          41   \n",
       "\n",
       "                                  product_name  aisle_id  department_id  \\\n",
       "0                   Chocolate Sandwich Cookies        61             19   \n",
       "1                Mint Chocolate Flavored Syrup       103             19   \n",
       "2      Salted Caramel Lean Protein & Fiber Bar         3             19   \n",
       "3                Nacho Cheese White Bean Chips       107             19   \n",
       "4  Organic Sourdough Einkorn Crackers Rosemary        78             19   \n",
       "\n",
       "   prices department_name    price_range_loc     busiest_day    busiest_days  \\\n",
       "0     5.8          snacks  Mid-range product  Regularly busy  Regularly busy   \n",
       "1     5.2          snacks  Mid-range product  Regularly busy    Slowest days   \n",
       "2     1.9          snacks  Low-range product  Regularly busy    Slowest days   \n",
       "3     4.9          snacks  Low-range product     Busiest day    Busiest days   \n",
       "4     6.5          snacks  Mid-range product      Least busy    Slowest days   \n",
       "\n",
       "  busiest_period_of_day      loyalty_flag  \n",
       "0        Average orders      New Customer  \n",
       "1           Most orders      New Customer  \n",
       "2           Most orders  Regular Customer  \n",
       "3           Most orders      New Customer  \n",
       "4           Most orders      New Customer  "
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Display dataframe \n",
    "ords_prods_merge.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "644a17ba",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "New Customer        23470\n",
      "Loyal Customer      13782\n",
      "Regular Customer    12441\n",
      "Name: loyalty_flag, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# Check if 'loyalty_flag' exists in the dataframe\n",
    "if 'loyalty_flag' in ords_prods_merge.columns:\n",
    "    # Check loyalty flags\n",
    "    print(ords_prods_merge['loyalty_flag'].value_counts(dropna=False))\n",
    "else:\n",
    "    print(\"The column 'loyalty_flag' does not exist in the dataframe.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "fe212403",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create a new column for the average spending of a customer\n",
    "ords_prods_merge['average_spend'] = ords_prods_merge.groupby(['user_id'])['prices'].transform('mean')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "b6374295",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>order_id</th>\n",
       "      <th>user_id</th>\n",
       "      <th>eval_set</th>\n",
       "      <th>order_number</th>\n",
       "      <th>orders_day_of_week</th>\n",
       "      <th>order_hour_of_day</th>\n",
       "      <th>days_since_prior_order</th>\n",
       "      <th>product_id</th>\n",
       "      <th>product_name</th>\n",
       "      <th>aisle_id</th>\n",
       "      <th>department_id</th>\n",
       "      <th>prices</th>\n",
       "      <th>department_name</th>\n",
       "      <th>price_range_loc</th>\n",
       "      <th>busiest_day</th>\n",
       "      <th>busiest_days</th>\n",
       "      <th>busiest_period_of_day</th>\n",
       "      <th>loyalty_flag</th>\n",
       "      <th>average_spend</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2539329</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>Chocolate Sandwich Cookies</td>\n",
       "      <td>61</td>\n",
       "      <td>19</td>\n",
       "      <td>5.8</td>\n",
       "      <td>snacks</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Average orders</td>\n",
       "      <td>New Customer</td>\n",
       "      <td>5.518182</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1673511</td>\n",
       "      <td>2</td>\n",
       "      <td>prior</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>8.0</td>\n",
       "      <td>16</td>\n",
       "      <td>Mint Chocolate Flavored Syrup</td>\n",
       "      <td>103</td>\n",
       "      <td>19</td>\n",
       "      <td>5.2</td>\n",
       "      <td>snacks</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Slowest days</td>\n",
       "      <td>Most orders</td>\n",
       "      <td>New Customer</td>\n",
       "      <td>8.606667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>839880</td>\n",
       "      <td>2</td>\n",
       "      <td>prior</td>\n",
       "      <td>14</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>13.0</td>\n",
       "      <td>25</td>\n",
       "      <td>Salted Caramel Lean Protein &amp; Fiber Bar</td>\n",
       "      <td>3</td>\n",
       "      <td>19</td>\n",
       "      <td>1.9</td>\n",
       "      <td>snacks</td>\n",
       "      <td>Low-range product</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Slowest days</td>\n",
       "      <td>Most orders</td>\n",
       "      <td>Regular Customer</td>\n",
       "      <td>8.606667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1972919</td>\n",
       "      <td>3</td>\n",
       "      <td>prior</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>16</td>\n",
       "      <td>7.0</td>\n",
       "      <td>32</td>\n",
       "      <td>Nacho Cheese White Bean Chips</td>\n",
       "      <td>107</td>\n",
       "      <td>19</td>\n",
       "      <td>4.9</td>\n",
       "      <td>snacks</td>\n",
       "      <td>Low-range product</td>\n",
       "      <td>Busiest day</td>\n",
       "      <td>Busiest days</td>\n",
       "      <td>Most orders</td>\n",
       "      <td>New Customer</td>\n",
       "      <td>9.592308</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2030307</td>\n",
       "      <td>4</td>\n",
       "      <td>prior</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>11</td>\n",
       "      <td>19.0</td>\n",
       "      <td>41</td>\n",
       "      <td>Organic Sourdough Einkorn Crackers Rosemary</td>\n",
       "      <td>78</td>\n",
       "      <td>19</td>\n",
       "      <td>6.5</td>\n",
       "      <td>snacks</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Least busy</td>\n",
       "      <td>Slowest days</td>\n",
       "      <td>Most orders</td>\n",
       "      <td>New Customer</td>\n",
       "      <td>12.666667</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   order_id  user_id eval_set  order_number  orders_day_of_week  \\\n",
       "0   2539329        1    prior             1                   2   \n",
       "1   1673511        2    prior             5                   3   \n",
       "2    839880        2    prior            14                   3   \n",
       "3   1972919        3    prior             6                   0   \n",
       "4   2030307        4    prior             2                   4   \n",
       "\n",
       "   order_hour_of_day  days_since_prior_order  product_id  \\\n",
       "0                  8                     NaN           1   \n",
       "1                 11                     8.0          16   \n",
       "2                 10                    13.0          25   \n",
       "3                 16                     7.0          32   \n",
       "4                 11                    19.0          41   \n",
       "\n",
       "                                  product_name  aisle_id  department_id  \\\n",
       "0                   Chocolate Sandwich Cookies        61             19   \n",
       "1                Mint Chocolate Flavored Syrup       103             19   \n",
       "2      Salted Caramel Lean Protein & Fiber Bar         3             19   \n",
       "3                Nacho Cheese White Bean Chips       107             19   \n",
       "4  Organic Sourdough Einkorn Crackers Rosemary        78             19   \n",
       "\n",
       "   prices department_name    price_range_loc     busiest_day    busiest_days  \\\n",
       "0     5.8          snacks  Mid-range product  Regularly busy  Regularly busy   \n",
       "1     5.2          snacks  Mid-range product  Regularly busy    Slowest days   \n",
       "2     1.9          snacks  Low-range product  Regularly busy    Slowest days   \n",
       "3     4.9          snacks  Low-range product     Busiest day    Busiest days   \n",
       "4     6.5          snacks  Mid-range product      Least busy    Slowest days   \n",
       "\n",
       "  busiest_period_of_day      loyalty_flag  average_spend  \n",
       "0        Average orders      New Customer       5.518182  \n",
       "1           Most orders      New Customer       8.606667  \n",
       "2           Most orders  Regular Customer       8.606667  \n",
       "3           Most orders      New Customer       9.592308  \n",
       "4           Most orders      New Customer      12.666667  "
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check the new column\n",
    "ords_prods_merge.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "97be9789",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Assign spender tag to each customer \"low_spender\"\n",
    "ords_prods_merge.loc[ords_prods_merge['average_spend']<10,'spender_flag']='Low_spender'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "516916f1",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Assign spender tag to each customer \"High_spender\"\n",
    "ords_prods_merge.loc[ords_prods_merge['average_spend']>= 10, 'spender_flag'] = 'High_spender'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "69d429f4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Low_spender     48611\n",
       "High_spender     1082\n",
       "Name: spender_flag, dtype: int64"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check spender flags\n",
    "ords_prods_merge['spender_flag'].value_counts(dropna = False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f325d1b0",
   "metadata": {},
   "source": [
    "When looking at this data we see that there is revativly low amount of high_spenders "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "ea4b3353",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create a new column for customer frequency \n",
    "ords_prods_merge['customer_frequency'] = ords_prods_merge.groupby(['user_id'])['days_since_prior_order'].transform('median')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "0a7c6002",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>order_id</th>\n",
       "      <th>user_id</th>\n",
       "      <th>eval_set</th>\n",
       "      <th>order_number</th>\n",
       "      <th>orders_day_of_week</th>\n",
       "      <th>order_hour_of_day</th>\n",
       "      <th>days_since_prior_order</th>\n",
       "      <th>product_id</th>\n",
       "      <th>product_name</th>\n",
       "      <th>aisle_id</th>\n",
       "      <th>...</th>\n",
       "      <th>prices</th>\n",
       "      <th>department_name</th>\n",
       "      <th>price_range_loc</th>\n",
       "      <th>busiest_day</th>\n",
       "      <th>busiest_days</th>\n",
       "      <th>busiest_period_of_day</th>\n",
       "      <th>loyalty_flag</th>\n",
       "      <th>average_spend</th>\n",
       "      <th>spender_flag</th>\n",
       "      <th>customer_frequency</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2539329</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>Chocolate Sandwich Cookies</td>\n",
       "      <td>61</td>\n",
       "      <td>...</td>\n",
       "      <td>5.8</td>\n",
       "      <td>snacks</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Average orders</td>\n",
       "      <td>New Customer</td>\n",
       "      <td>5.518182</td>\n",
       "      <td>Low_spender</td>\n",
       "      <td>19.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1673511</td>\n",
       "      <td>2</td>\n",
       "      <td>prior</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>8.0</td>\n",
       "      <td>16</td>\n",
       "      <td>Mint Chocolate Flavored Syrup</td>\n",
       "      <td>103</td>\n",
       "      <td>...</td>\n",
       "      <td>5.2</td>\n",
       "      <td>snacks</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Slowest days</td>\n",
       "      <td>Most orders</td>\n",
       "      <td>New Customer</td>\n",
       "      <td>8.606667</td>\n",
       "      <td>Low_spender</td>\n",
       "      <td>13.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>839880</td>\n",
       "      <td>2</td>\n",
       "      <td>prior</td>\n",
       "      <td>14</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>13.0</td>\n",
       "      <td>25</td>\n",
       "      <td>Salted Caramel Lean Protein &amp; Fiber Bar</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>1.9</td>\n",
       "      <td>snacks</td>\n",
       "      <td>Low-range product</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Slowest days</td>\n",
       "      <td>Most orders</td>\n",
       "      <td>Regular Customer</td>\n",
       "      <td>8.606667</td>\n",
       "      <td>Low_spender</td>\n",
       "      <td>13.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1972919</td>\n",
       "      <td>3</td>\n",
       "      <td>prior</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>16</td>\n",
       "      <td>7.0</td>\n",
       "      <td>32</td>\n",
       "      <td>Nacho Cheese White Bean Chips</td>\n",
       "      <td>107</td>\n",
       "      <td>...</td>\n",
       "      <td>4.9</td>\n",
       "      <td>snacks</td>\n",
       "      <td>Low-range product</td>\n",
       "      <td>Busiest day</td>\n",
       "      <td>Busiest days</td>\n",
       "      <td>Most orders</td>\n",
       "      <td>New Customer</td>\n",
       "      <td>9.592308</td>\n",
       "      <td>Low_spender</td>\n",
       "      <td>11.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2030307</td>\n",
       "      <td>4</td>\n",
       "      <td>prior</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>11</td>\n",
       "      <td>19.0</td>\n",
       "      <td>41</td>\n",
       "      <td>Organic Sourdough Einkorn Crackers Rosemary</td>\n",
       "      <td>78</td>\n",
       "      <td>...</td>\n",
       "      <td>6.5</td>\n",
       "      <td>snacks</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Least busy</td>\n",
       "      <td>Slowest days</td>\n",
       "      <td>Most orders</td>\n",
       "      <td>New Customer</td>\n",
       "      <td>12.666667</td>\n",
       "      <td>High_spender</td>\n",
       "      <td>19.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   order_id  user_id eval_set  order_number  orders_day_of_week  \\\n",
       "0   2539329        1    prior             1                   2   \n",
       "1   1673511        2    prior             5                   3   \n",
       "2    839880        2    prior            14                   3   \n",
       "3   1972919        3    prior             6                   0   \n",
       "4   2030307        4    prior             2                   4   \n",
       "\n",
       "   order_hour_of_day  days_since_prior_order  product_id  \\\n",
       "0                  8                     NaN           1   \n",
       "1                 11                     8.0          16   \n",
       "2                 10                    13.0          25   \n",
       "3                 16                     7.0          32   \n",
       "4                 11                    19.0          41   \n",
       "\n",
       "                                  product_name  aisle_id  ...  prices  \\\n",
       "0                   Chocolate Sandwich Cookies        61  ...     5.8   \n",
       "1                Mint Chocolate Flavored Syrup       103  ...     5.2   \n",
       "2      Salted Caramel Lean Protein & Fiber Bar         3  ...     1.9   \n",
       "3                Nacho Cheese White Bean Chips       107  ...     4.9   \n",
       "4  Organic Sourdough Einkorn Crackers Rosemary        78  ...     6.5   \n",
       "\n",
       "   department_name    price_range_loc     busiest_day    busiest_days  \\\n",
       "0           snacks  Mid-range product  Regularly busy  Regularly busy   \n",
       "1           snacks  Mid-range product  Regularly busy    Slowest days   \n",
       "2           snacks  Low-range product  Regularly busy    Slowest days   \n",
       "3           snacks  Low-range product     Busiest day    Busiest days   \n",
       "4           snacks  Mid-range product      Least busy    Slowest days   \n",
       "\n",
       "  busiest_period_of_day      loyalty_flag average_spend  spender_flag  \\\n",
       "0        Average orders      New Customer      5.518182   Low_spender   \n",
       "1           Most orders      New Customer      8.606667   Low_spender   \n",
       "2           Most orders  Regular Customer      8.606667   Low_spender   \n",
       "3           Most orders      New Customer      9.592308   Low_spender   \n",
       "4           Most orders      New Customer     12.666667  High_spender   \n",
       "\n",
       "  customer_frequency  \n",
       "0               19.5  \n",
       "1               13.0  \n",
       "2               13.0  \n",
       "3               11.0  \n",
       "4               19.0  \n",
       "\n",
       "[5 rows x 21 columns]"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check that the column was created \n",
    "ords_prods_merge.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "fea242d1",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create a column featuring order frequency flags\n",
    "ords_prods_merge.loc[ords_prods_merge['customer_frequency'] > 20, 'frequency_flag'] = 'Non-frequent customer'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "76ab87b6",
   "metadata": {},
   "outputs": [],
   "source": [
    "ords_prods_merge.loc[(ords_prods_merge['customer_frequency'] > 10) & (ords_prods_merge['customer_frequency'] <=20), 'frequency_flag'] = 'Regular customer'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "00333721",
   "metadata": {},
   "outputs": [],
   "source": [
    "ords_prods_merge.loc[ords_prods_merge['customer_frequency'] <= 10, 'frequency_flag'] = 'Frequent customer'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "518e9096",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Frequent customer        31829\n",
       "Regular customer         11307\n",
       "Non-frequent customer     6557\n",
       "Name: frequency_flag, dtype: int64"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check value counts for new column\n",
    "ords_prods_merge['frequency_flag'].value_counts(dropna = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "999e7e92",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user_id</th>\n",
       "      <th>customer_frequency</th>\n",
       "      <th>frequency_flag</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>19.5</td>\n",
       "      <td>Regular customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>13.0</td>\n",
       "      <td>Regular customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>13.0</td>\n",
       "      <td>Regular customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>11.0</td>\n",
       "      <td>Regular customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>19.0</td>\n",
       "      <td>Regular customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>7</td>\n",
       "      <td>7.0</td>\n",
       "      <td>Frequent customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>7.0</td>\n",
       "      <td>Frequent customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>30.0</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>8</td>\n",
       "      <td>30.0</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>11</td>\n",
       "      <td>14.0</td>\n",
       "      <td>Regular customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>12</td>\n",
       "      <td>30.0</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>12</td>\n",
       "      <td>30.0</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>13</td>\n",
       "      <td>7.0</td>\n",
       "      <td>Frequent customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>14</td>\n",
       "      <td>27.0</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>15</td>\n",
       "      <td>8.0</td>\n",
       "      <td>Frequent customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>15</td>\n",
       "      <td>8.0</td>\n",
       "      <td>Frequent customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>15</td>\n",
       "      <td>8.0</td>\n",
       "      <td>Frequent customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>15</td>\n",
       "      <td>8.0</td>\n",
       "      <td>Frequent customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>15</td>\n",
       "      <td>8.0</td>\n",
       "      <td>Frequent customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>16</td>\n",
       "      <td>20.5</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    user_id  customer_frequency         frequency_flag\n",
       "0         1                19.5       Regular customer\n",
       "1         2                13.0       Regular customer\n",
       "2         2                13.0       Regular customer\n",
       "3         3                11.0       Regular customer\n",
       "4         4                19.0       Regular customer\n",
       "5         7                 7.0      Frequent customer\n",
       "6         7                 7.0      Frequent customer\n",
       "7         8                30.0  Non-frequent customer\n",
       "8         8                30.0  Non-frequent customer\n",
       "9        11                14.0       Regular customer\n",
       "10       12                30.0  Non-frequent customer\n",
       "11       12                30.0  Non-frequent customer\n",
       "12       13                 7.0      Frequent customer\n",
       "13       14                27.0  Non-frequent customer\n",
       "14       15                 8.0      Frequent customer\n",
       "15       15                 8.0      Frequent customer\n",
       "16       15                 8.0      Frequent customer\n",
       "17       15                 8.0      Frequent customer\n",
       "18       15                 8.0      Frequent customer\n",
       "19       16                20.5  Non-frequent customer"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ords_prods_merge[['user_id', 'customer_frequency', 'frequency_flag']].head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "61a014d1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(49693, 22)"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check shape before exporting\n",
    "ords_prods_merge.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "590de256",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Export the updated dataframe as a pickle file\n",
    "ords_prods_merge.to_pickle(os.path.join(path,'orders_products_combined_merged_new_variables_derived_aggregated.pkl'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0e3e6562",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
